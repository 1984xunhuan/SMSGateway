PROJECT(SMSSrv CXX)

CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

ADD_SUBDIRECTORY(include)
ADD_SUBDIRECTORY(src/Main)
ADD_SUBDIRECTORY(src/Base)
ADD_SUBDIRECTORY(src/Service)
ADD_SUBDIRECTORY(src/Dao)
ADD_SUBDIRECTORY(src/Entity)
ADD_SUBDIRECTORY(src/Util)

#debug version
#SET(CMAKE_BUILD_TYPE Debug)

SET(LIBRARY_OUTPUT_PATH ${CMAKE_SOURCE_DIR}/lib/)
SET(EXECUTABLE_OUTPUT_PATH ${CMAKE_SOURCE_DIR}/bin/)

SET(CMAKE_VERBOSE_MAKEFILE ON)
SET(CMAKE_CXX_COMPILER "g++")

ADD_DEFINITIONS(-m32 -Wall -D__cplusplus -D__LINUX__ -fPIC -rdynamic)

SET(CMAKE_CXX_FLAG_DEBUG "$ENV{CXXFLAGS} -O0 -g -ggdb")
SET(CMAKE_CXX_FLAG_RELEASE "$ENV{CXXFLAGS} -O2")


IF(CMAKE_COMPILER_IS_GNUCC)
  SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fmessage-length=0")
ENDIF(CMAKE_COMPILER_IS_GNUCC)
IF(CMAKE_COMPILER_IS_GNUCXX)
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fmessage-length=0")
ENDIF(CMAKE_COMPILER_IS_GNUCXX)

INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/src/Main)
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/src/Base)
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/src/Service)
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/src/Dao)
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/src/Entity)
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/src/Util)
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/src/include)
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/include_dep)
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/include_dep/oracle)

LINK_DIRECTORIES(${CMAKE_SOURCE_DIR}/lib)
LINK_DIRECTORIES(${CMAKE_SOURCE_DIR}/lib_dep)

AUX_SOURCE_DIRECTORY(src/Main/     MAINSRC)
AUX_SOURCE_DIRECTORY(src/Base/     BASESRC)
AUX_SOURCE_DIRECTORY(src/Dao/      DAOSRC)
AUX_SOURCE_DIRECTORY(src/Service/  SERVICESRC)
AUX_SOURCE_DIRECTORY(src/Entity/   ENTITYSRC)
AUX_SOURCE_DIRECTORY(src/Util/     UTILSRC)
 
ADD_EXECUTABLE(SMSSrv ${MAINSRC} ${BASESRC} ${SERVICESRC} ${DAOSRC} ${ENTITYSRC} ${UTILSRC})
ADD_DEPENDENCIES(SMSSrv PROPERTIES LINK_LANGUAGE CXX)
TARGET_LINK_LIBRARIES(SMSSrv crypto)
TARGET_LINK_LIBRARIES(SMSSrv libxml2.a)
TARGET_LINK_LIBRARIES(SMSSrv libocci10.a)
TARGET_LINK_LIBRARIES(SMSSrv clntsh)
TARGET_LINK_LIBRARIES(SMSSrv nnz10)
TARGET_LINK_LIBRARIES(SMSSrv ociei)
